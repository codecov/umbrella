.PHONY: devenv.build.requirements
devenv.build.requirements:
	$(MAKE) build.requirements
	$(MAKE) build.test-requirements

.PHONY: devenv.build.worker
devenv.build.worker: devenv.build.requirements
	$(MAKE) worker.build.local

.PHONY: devenv.build.api
devenv.build.api: devenv.build.requirements
	$(MAKE) api.build.local

.PHONY: devenv.build.shared
devenv.build.shared: devenv.build.requirements
	$(MAKE) shared.build.local

.PHONY: devenv.build
devenv.build: devenv.build.requirements devenv.build.api devenv.build.worker devenv.build.shared

.PHONY: devenv.start.deps
devenv.start.deps:
	docker compose up minio redis postgres timescale mailhog --detach

.PHONY: devenv.start.apps
devenv.start.apps:
	# No-op if they have not already been started
	docker compose down worker api gateway
	docker compose up worker api shared frontend gateway --detach

.PHONY: devenv.start
devenv.start: devenv.start.deps devenv.start.apps

.PHONY: devenv
devenv:
	$(MAKE) devenv.build
	$(MAKE) devenv.migrate
	$(MAKE) devenv.start

.PHONY: devenv.refresh
devenv.refresh:
	$(MAKE) devenv.build
	$(MAKE) devenv.migrate
	$(MAKE) devenv.start.apps

.PHONY: devenv.migrate
devenv.migrate:
	$(MAKE) devenv.start.deps
	docker compose run --entrypoint python --rm api manage.py migrate
	docker compose run --entrypoint python --rm api migrate_timeseries.py
	docker compose run --entrypoint python --rm api manage.py pgpartition --yes
	docker compose run --entrypoint python --rm worker manage.py migrate
	docker compose run --entrypoint python --rm worker migrate_timeseries.py
	docker compose run --entrypoint python --rm worker manage.py pgpartition --yes

.PHONY: devenv.admin
devenv.admin:
	@echo "Enter the external ID of the user to make an admin. The user must have first logged into the main application and then their ID can be found in the database or by visiting the admin interface (http://localhost:8080/admin/) and copying the ID that appears on the login page."
	@printf "Input: "; \
	read external_id; \
	docker compose run --entrypoint python --rm api manage.py shell -c "from codecov_auth.models import User; user = User.objects.get(external_id='$$external_id'); user.is_staff = True; user.is_superuser = True; user.save(); print(f'User {user.name} (external_id: $$external_id) is now an admin')"

.PHONY: devenv.stop
devenv.stop:
	docker compose down --remove-orphans

include tools/devenv/Makefile.test
