name: API CI

on:
  workflow_call:
    inputs: 
      skip:
        type: boolean
        default: false

permissions:
  contents: "read"
  id-token: "write"
  issues: "write"
  pull-requests: "write"

jobs:
  api-lint:
    name: Run Lint (API)
    if: ${{ inputs.skip == false }}
    uses: codecov/gha-workflows/.github/workflows/lint.yml@v1.2.36
    with:
      make_target_prefix: api.

  api-mypy:
    name: Patch typing (API)
    if: ${{ inputs.skip == false }}
    uses: codecov/gha-workflows/.github/workflows/mypy.yml@v1.2.31
    with:
      working_directory: apps/codecov-api

  # Once we cut over to umbrella, we can just replace the default cache key in build-app.yml
  # and self-hosted.yml and get rid of this step.
  api-compute-reqs-cache-key:
    name: Compute cache key for requirements image
    runs-on: ubuntu-latest
    outputs:
      reqs-cache-key: ${{ steps.compute.outputs.cache-key }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'
      - id: compute
        run: |
          echo cache-key=${{ hashFiles('apps/codecov-api/uv.lock') }}-${{ hashFiles('docker/Dockerfile.requirements') }}-${{ hashFiles('libs/shared/**') }} >> "$GITHUB_OUTPUT"

  api-build:
    name: Build App (API)
    if: ${{ inputs.skip == false }}
    needs: [api-compute-reqs-cache-key]
    uses: codecov/gha-workflows/.github/workflows/build-app.yml@v1.2.36
    secrets: inherit
    with:
      repo: ${{ vars.CODECOV_API_IMAGE_V2 || vars.CODECOV_API_IMAGE_V2_SELF_HOSTED || 'codecov/self-hosted-api' }}
      output_directory: apps/codecov-api
      make_target_prefix: api.
      reqs_cache_key: ${{ needs.api-compute-reqs-cache-key.outputs.reqs-cache-key }}

  api-test:
    name: Test (API)
    if: ${{ inputs.skip == false }}
    needs: [api-build]
    uses: codecov/gha-workflows/.github/workflows/run-tests.yml@v1.2.36
    secrets: inherit
    with:
      run_integration: false
      repo: ${{ vars.CODECOV_API_IMAGE_V2 || vars.CODECOV_API_IMAGE_V2_SELF_HOSTED || 'codecov/self-hosted-api' }}
      output_directory: apps/codecov-api
      flag_prefix: api
      pytest_rootdir: /app
      make_target_prefix: api.

  api-build-self-hosted:
    name: Build Self Hosted (API)
    if: ${{ inputs.skip == false }}
    needs: [api-build, api-test]
    uses: codecov/gha-workflows/.github/workflows/self-hosted.yml@v1.2.36
    secrets: inherit
    with:
      repo: ${{ vars.CODECOV_API_IMAGE_V2 || vars.CODECOV_API_IMAGE_V2_SELF_HOSTED || 'codecov/self-hosted-api' }}
      output_directory: apps/codecov-api
      make_target_prefix: api.
      reqs_cache_key: ${{ needs.api-compute-reqs-cache-key.outputs.reqs-cache-key }}

  api-staging:
    name: Push Staging Image (API)
    needs: [api-build, api-test]
    if: ${{ inputs.skip == false && github.event_name == 'push' && github.event.ref == 'refs/heads/staging' && github.repository_owner == 'codecov' }}
    uses: codecov/gha-workflows/.github/workflows/push-env.yml@v1.2.36
    secrets: inherit
    with:
      environment: staging
      repo: ${{ vars.CODECOV_API_IMAGE_V2 || vars.CODECOV_API_IMAGE_V2_SELF_HOSTED || 'codecov/self-hosted-api' }}
      output_directory: apps/codecov-api
      sentry_project: api
      make_target_prefix: api.

  api-production:
    name: Push Production Image (API)
    needs: [api-build, api-test]
    if: ${{ inputs.skip == false && github.event_name == 'push' && github.event.ref == 'refs/heads/main' && github.repository_owner == 'codecov' }}
    uses: codecov/gha-workflows/.github/workflows/push-env.yml@v1.2.36
    secrets: inherit
    with:
      environment: production
      repo: ${{ vars.CODECOV_API_IMAGE_V2 || vars.CODECOV_API_IMAGE_V2_SELF_HOSTED || 'codecov/self-hosted-api' }}
      output_directory: apps/codecov-api
      sentry_project: api
      make_target_prefix: api.

  api-self-hosted:
    name: Push Self Hosted Image (API)
    needs: [api-build-self-hosted, api-test]
    secrets: inherit
    if: ${{ inputs.skip == false && github.event_name == 'push' && github.event.ref == 'refs/heads/main' && github.repository_owner == 'codecov' }}
    uses: codecov/gha-workflows/.github/workflows/self-hosted.yml@v1.2.36
    with:
      push_rolling: true
      repo: ${{ vars.CODECOV_API_IMAGE_V2 || vars.CODECOV_API_IMAGE_V2_SELF_HOSTED || 'codecov/self-hosted-api' }}
      output_directory: apps/codecov-api
      make_target_prefix: api.
      reqs_cache_key: ${{ needs.api-compute-reqs-cache-key.outputs.reqs-cache-key }}

  # This job works around a strange interaction between reusable workflows and
  # path filters.
  #
  # When a job that uses a reusable workflow is skipped, a single check shows up
  # for it (e.g. `API CI / Test`). If the job is _not_ skipped, that check does
  # not appear and instead you see checks for all of the jobs nested in the
  # reusable workflow (`API CI / Test / Run tests`). There's no single check
  # that's consistently there which you can mark as required.
  #
  # Because this job does not use a reusable workflow, it will produce the same
  # check whether or not it is skipped. So, we can make this check required and
  # have it figure out whether the jobs we actually care about failed.
  api-required-checks:
    name: Required checks (API)
    if: ${{ !cancelled() && inputs.skip == false }}
    runs-on: ubuntu-latest
    needs: [api-test, api-lint]
    steps:
      - name: Fail lint
        if: ${{ needs.api-lint.result == 'failure' }}
        run: exit 1
      - name: Fail tests
        if: ${{ needs.api-test.outputs.tests_passed == 'failure' }}
        run: exit 1
