# Generated by Django 4.2.21 on 2025-07-17 14:40

import django_prometheus.models
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("ta_timeseries", "0019_refresh_repo_summary_caggs"),
    ]

    operations = [
        migrations.CreateModel(
            name="AggregateDaily",
            fields=[
                (
                    "bucket_daily",
                    models.DateTimeField(primary_key=True, serialize=False),
                ),
                ("repo_id", models.IntegerField()),
                ("total_duration_seconds", models.FloatField()),
                ("pass_count", models.IntegerField()),
                ("fail_count", models.IntegerField()),
                ("skip_count", models.IntegerField()),
                ("flaky_fail_count", models.IntegerField()),
            ],
            options={
                "db_table": "ta_timeseries_aggregate_daily",
                "managed": False,
            },
            bases=(
                django_prometheus.models.ExportModelOperationsMixin(
                    "ta_timeseries.aggregate_daily"
                ),
                models.Model,
            ),
        ),
        migrations.CreateModel(
            name="AggregateHourly",
            fields=[
                (
                    "bucket_hourly",
                    models.DateTimeField(primary_key=True, serialize=False),
                ),
                ("repo_id", models.IntegerField()),
                ("total_duration_seconds", models.FloatField()),
                ("pass_count", models.IntegerField()),
                ("fail_count", models.IntegerField()),
                ("skip_count", models.IntegerField()),
                ("flaky_fail_count", models.IntegerField()),
            ],
            options={
                "db_table": "ta_timeseries_aggregate_hourly",
                "managed": False,
            },
            bases=(
                django_prometheus.models.ExportModelOperationsMixin(
                    "ta_timeseries.aggregate_hourly"
                ),
                models.Model,
            ),
        ),
        migrations.CreateModel(
            name="BranchAggregateDaily",
            fields=[
                (
                    "bucket_daily",
                    models.DateTimeField(primary_key=True, serialize=False),
                ),
                ("repo_id", models.IntegerField()),
                ("branch", models.TextField()),
                ("total_duration_seconds", models.FloatField()),
                ("pass_count", models.IntegerField()),
                ("fail_count", models.IntegerField()),
                ("skip_count", models.IntegerField()),
                ("flaky_fail_count", models.IntegerField()),
            ],
            options={
                "db_table": "ta_timeseries_branch_aggregate_daily",
                "managed": False,
            },
            bases=(
                django_prometheus.models.ExportModelOperationsMixin(
                    "ta_timeseries.branch_aggregate_daily"
                ),
                models.Model,
            ),
        ),
        migrations.CreateModel(
            name="BranchAggregateHourly",
            fields=[
                (
                    "bucket_hourly",
                    models.DateTimeField(primary_key=True, serialize=False),
                ),
                ("repo_id", models.IntegerField()),
                ("branch", models.TextField()),
                ("total_duration_seconds", models.FloatField()),
                ("pass_count", models.IntegerField()),
                ("fail_count", models.IntegerField()),
                ("skip_count", models.IntegerField()),
                ("flaky_fail_count", models.IntegerField()),
            ],
            options={
                "db_table": "ta_timeseries_branch_aggregate_hourly",
                "managed": False,
            },
            bases=(
                django_prometheus.models.ExportModelOperationsMixin(
                    "ta_timeseries.branch_aggregate_hourly"
                ),
                models.Model,
            ),
        ),
    ]
