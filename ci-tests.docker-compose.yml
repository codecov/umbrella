services:
  repo:
    image: ${AR_REPO}:${VERSION}
    tty: true
    depends_on:
      - minio
      - postgres
      - redis
      - timescale
    volumes:
      - ./:/app
      - ./tools/devenv/config/test.yml:/config/codecov.yml
    networks:
      - codecov
    environment:
      # Improves pytest-cov performance in python 3.12
      # https://github.com/nedbat/coveragepy/issues/1665#issuecomment-1937075835
      - COVERAGE_CORE=sysmon
      - RUN_ENV=DEV
      - CODECOV_YML=/config/codecov.yml
    env_file:
      - .testenv
    entrypoint:
      - /bin/sh # We don't really need to start the service for tests

  postgres:
    image: postgres:14-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_HOST_AUTH_METHOD=trust
      - POSTGRES_PASSWORD=password
    volumes:
      - type: tmpfs
        target: /var/lib/postgresql/data
        tmpfs:
          size: 1024M
    networks:
      - codecov

  timescale:
    image: timescale/timescaledb-ha:pg14-latest
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_HOST_AUTH_METHOD=trust
      - POSTGRES_PASSWORD=password
    volumes:
      - ./docker/init_db.sql:/docker-entrypoint-initdb.d/init_db.sql
    networks:
      - codecov

  redis:
    image: redis:6-alpine
    networks:
      - codecov

  minio:
    image: minio/minio:latest
    command: server --address ":9002" /export
    environment:
      - MINIO_ACCESS_KEY=codecov-default-key
      - MINIO_SECRET_KEY=codecov-default-secret
    volumes:
      - type: tmpfs
        target: /export
        tmpfs:
          size: 256M
    networks:
      - codecov

  mailhog:
    image: mailhog/mailhog:latest
    networks:
      - codecov

networks:
  codecov:
    driver: bridge
